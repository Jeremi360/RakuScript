<rakuscript>          ::= <block>

<block>               ::= <statement> <block>?

<statement>           ::= <definition>
                        | <gdscpript>
                        | <charater-def>
                        | <annotation>
                        | <comment>
                        | <line>

<comment>             ::= "#" .*

<change-var>          ::= <var-name> <ws>? "=" <expression>

<boolean>             ::= "true" | "false"

<string>              ::= '"' <non-dquote>* ( <backslash> . <non-dquote>* )* '"'

<number>              ::= ( ( "+" | "-" ) <ws>? )? <digit>+ ( "."
                            <digit>* )?

<unquoted-string>     ::= <non-rparen>* ( <backslash> . <non-rparen>* )*

<raw-expression>      ::= "'" <non-squote>* ( <backslash> . <non-squote>* )* "'"

<non-rbrace>          ::= [^ "}" <backslash> ]

<non-rparen>          ::= [^ ")" <backslash> ]

<non-dquote>          ::= [^ '"' <backslash> ]

<non-squote>          ::= [^ "'" <backslash> ]

<backslash>           ::= "\"

<ws>                  ::= \s

<alphanumeric>        ::= <alpha> | <digit>

<var-name>        ::= <alpha> <digit>?

<digit>               ::= "0"
                        | "1"
                        | "2"
                        | "3"
                        | "4"
                        | "5"
                        | "6"
                        | "7"
                        | "8"
                        | "9"

<alpha>               ::= [ "A" - "Z" "a" - "z" "_" ]

<definition>          ::= "define" <ws> <change-var>

<charater-def>        ::= <charater-base> <ws> <string>
                        | <charater-base> <ws> <charater-key> <ws>
                        | <charater-base> <ws> "stats" <change-var>

<character-base>      ::= "charater" <ws> <var-name>

<character-key>        ::= "name"
                        | "avatar"
                        | "color"
                        | "kind"
                        | "prefix"
                      	| "suffix"

<gdscpript>           ::= "gd:" (<statement> | <block>)

<array>               ::= '[' (<expression>)? ']'
<dictionary>          ::= '{' ('"'<var_name>'"': <expression> )? '}'


<expression>          ::= <number>
                         | <string>
                         | <array>
                         | <dictionary>
                         | <boolean>
